// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Sample;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Edge extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Edge getRootAsEdge(ByteBuffer _bb) { return getRootAsEdge(_bb, new Edge()); }
  public static Edge getRootAsEdge(ByteBuffer _bb, Edge obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Edge __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte attrsType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table attrs(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }
  public int time() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createEdge(FlatBufferBuilder builder,
      byte attrs_type,
      int attrsOffset,
      int time) {
    builder.startTable(3);
    Edge.addTime(builder, time);
    Edge.addAttrs(builder, attrsOffset);
    Edge.addAttrsType(builder, attrs_type);
    return Edge.endEdge(builder);
  }

  public static void startEdge(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addAttrsType(FlatBufferBuilder builder, byte attrsType) { builder.addByte(0, attrsType, 0); }
  public static void addAttrs(FlatBufferBuilder builder, int attrsOffset) { builder.addOffset(1, attrsOffset, 0); }
  public static void addTime(FlatBufferBuilder builder, int time) { builder.addInt(2, time, 0); }
  public static int endEdge(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEdgeBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedEdgeBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Edge get(int j) { return get(new Edge(), j); }
    public Edge get(Edge obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

