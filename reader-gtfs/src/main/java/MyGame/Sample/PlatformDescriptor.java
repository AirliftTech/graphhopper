// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Sample;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PlatformDescriptor extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PlatformDescriptor getRootAsPlatformDescriptor(ByteBuffer _bb) { return getRootAsPlatformDescriptor(_bb, new PlatformDescriptor()); }
  public static PlatformDescriptor getRootAsPlatformDescriptor(ByteBuffer _bb, PlatformDescriptor obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PlatformDescriptor __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String feedId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer feedIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer feedIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String stopId() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer stopIdAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer stopIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String routeId() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer routeIdAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer routeIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public int routeType() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createPlatformDescriptor(FlatBufferBuilder builder,
      int feed_idOffset,
      int stop_idOffset,
      int route_idOffset,
      int route_type) {
    builder.startTable(4);
    PlatformDescriptor.addRouteType(builder, route_type);
    PlatformDescriptor.addRouteId(builder, route_idOffset);
    PlatformDescriptor.addStopId(builder, stop_idOffset);
    PlatformDescriptor.addFeedId(builder, feed_idOffset);
    return PlatformDescriptor.endPlatformDescriptor(builder);
  }

  public static void startPlatformDescriptor(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addFeedId(FlatBufferBuilder builder, int feedIdOffset) { builder.addOffset(0, feedIdOffset, 0); }
  public static void addStopId(FlatBufferBuilder builder, int stopIdOffset) { builder.addOffset(1, stopIdOffset, 0); }
  public static void addRouteId(FlatBufferBuilder builder, int routeIdOffset) { builder.addOffset(2, routeIdOffset, 0); }
  public static void addRouteType(FlatBufferBuilder builder, int routeType) { builder.addInt(3, routeType, 0); }
  public static int endPlatformDescriptor(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PlatformDescriptor get(int j) { return get(new PlatformDescriptor(), j); }
    public PlatformDescriptor get(PlatformDescriptor obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

